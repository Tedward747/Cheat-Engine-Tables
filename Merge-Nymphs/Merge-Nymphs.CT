<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="34">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"Readme and updates at https://github.com/Tedward747/Cheat-Engine-Tables/tree/main/Merge-Nymphs"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{
Game   : Merge Nymphs  
Version: 104210 (March 2021)  
Author : Ted  
GitHub : https://github.com/Tedward747/Cheat-Engine-Tables/tree/main/Merge-Nymphs

Important:  
If something doesn't seem to be working, check my GitHub for updates.  
If you're on the most recent version, open an issue.  

Options:
  * Quality Of Life:
    * Disable Idle Check: Normally the game will pause if you're idle for too long, this disables that so you can leave the game running
    * Nymph Book: Require 5 Shells To Show Exclamation Mark: Annoying having the exclamation mark when you can merge 3 when you only want to merge 5. Enable then do something to refresh the book, i.e. enter camp or open &amp; close the book.
    * Idle Nymphs Stay Off Map: In camp, any Nymphs that aren't actively harvesting/attacking go to the bottom left corner so they aren't in the way.
  * Cheats:
    * Alchemist:
      * 100% Bonus Item Chance: When you complete a trade, you have a 100% chance to get the bonus item. Doesn't reflect in the UI but it works.
	  * Set Alchemist items given to 9: Makes the alchemist think you've already given her 9 of whatever item she's looking for. Enable cheat, then leave &amp; re-enter camp.
      * Trigger Alchemist Reset: Any time the Alchemist is updated (enter camp, or select her on the map, or if you activate this and you're in camp and she's currently on cooldown, maybe other cases), reset what item she wants and will give, even if she's on cooldown. When you get an item you want make sure you disable this so you don't lose it.
	  * Trigger Shop Daily Deal Reset: Resets the daily deals the alchemist has in the shop, whether the timer is at zero or not. Remember to turn this off if you get a deal you want to keep around.
    * Spawning Stuff:
	  * Spawn Unlimited Wind Lamps: Do not leave this running for long! Even 2-3 seconds will spawn enough for you to fill your entire camp. It takes a while for them to make their way onto the screen, so turn it on for a second or two, turn it off, and then be patient. If you spawn too many and your game starts to lag, you need to wait for them to go all the way across your camp and despawn. You can probably corrupt your save file if you let this run too long!
      * Building "Click" Spawners Constantly Spawn (Trees, Treasuries, etc): For spawners that you need to click on to get the item, as soon as you click and it drops the item, it generates another one.
	  * Building "Drop" Spawners Constantly Spawn (Water, Oil, Panties): For spawners that automatically drop items, they will start dropping an item every second. It can take a while to kick in after activating, each building must drop once on it's own before the new timer takes over for that building.
	* Resource Stuff:
	  * Disable Cheat Detection: Technically, this disables cheating being reported.  None of the checks actually stop you from cheating, just report it back to the server, presumably so they can ban you if you get too many instances. Cheats they detect as of when I made this:
	    * Current amount of each resource you have is tested to see if it's higher than a defined limit
	    * If you get more than 15,000 of a resource from a single source and you don't have at least 80 quest stars yet
		* If you're buying something for less than 100 "Nutaku Gold" - No clue what this even is, maybe something for mobile?
		* Any time you gain or spent a resource they double check that your total was changed by the right amount
		* Some other check that wasn't immediately obvious what they're doing and I couldn't be bothered to dig
		* So yeah, since none of their checks actually stop whatever was going on, and they may add more checks in the future, I just disabled the reporting part of things.
	  * Shop Prices Set To Zero: Pretty straight forward, works for the main shop and buying Nymph shells through the book at the very least. The shop daily deals seem to be hit or miss for some reason.
	  * Instantly Unlock All Chests In "The Vault": Aka, the chests you get from completing levels that normally take hours to unlock.
	* Challenge Levels:
	  * Double Bonus Rewards Cost 0 Gems: Pretty straight forward, enable before starting (or resuming) a challenge level.
	  * Disable Timer: Pretty straight forward, enable before starting (or resuming) a challenge level.
	* Misc:
	  * All Buffs Activate At Max Level: Any time you activate a buff, it turns it into a level 8 buff before activating it
      * Buffs Don't Get Removed When Used: Any time you activate a buff, it stays on your map
      * No Cost To Open Locked Chests/Golems/Event Chest: Should work for any camp item you click and it asks for coins, bricks or rubies to open
}
[ENABLE]
[DISABLE]
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Init"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$lua}
  if syntaxcheck then return end
  if (process == nil or readInteger(process) == nil or process ~= "Merge Nymphs.exe") then
    openProcess("Merge Nymphs.exe")
  end
  monoAA_USEMONO(process,false)
  waitForPDB()
{$asm}
[DISABLE]
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Quality Of Life"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1</ID>
              <Description>"Disable Idle Check"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
if LaunchMonoDataCollector() ~= 0 then
    mono_compile_method(mono_findMethod('Assembly-CSharp', 'TimeManagement', 'CheckForPlayerAbsence'))
    return monoAA_FINDMONOMETHOD("CheckForPlayerAbsence,:TimeManagement:CheckForPlayerAbsence")
end
{$asm}
CheckForPlayerAbsence:
  db C3
registersymbol(CheckForPlayerAbsence)

[DISABLE]
CheckForPlayerAbsence:
  db 55
unregistersymbol(CheckForPlayerAbsence)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>16</ID>
              <Description>"Nymph Book: Require 5 Shells To Show Exclamation Mark"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
if LaunchMonoDataCollector() ~= 0 then
    mono_compile_method(mono_findMethod('Assembly-CSharp', 'NymphBookCampButton', 'CheckIfCanMerge'))
    mono_compile_method(mono_findMethod('Assembly-CSharp', 'NymphBook', 'Show'))
    mono_compile_method(mono_findMethod('Assembly-CSharp', '&lt;&gt;c__DisplayClass98_0', '&lt;BuyShell&gt;b__0'))
end
{$asm}
aobScanRegion(CheckIfCanMerge,NymphBookCampButton.CheckIfCanMerge,NymphBookCampButton.CheckIfCanMerge+512,83 C4 08 83 F8 02 0F 8E)
aobScanRegion(CheckIfCanMerge2,NymphBook.Show,NymphBook.Show+2048,83 C4 08 83 F8 02 0F 8E)
aobScanRegion(CheckIfCanMerge3,&lt;&gt;c__DisplayClass98_0.&lt;BuyShell&gt;b__0,&lt;&gt;c__DisplayClass98_0.&lt;BuyShell&gt;b__0+512,83 C4 0C 83 F8 02)

CheckIfCanMerge+05:
  db 04
CheckIfCanMerge2+05:
  db 04
CheckIfCanMerge3+05:
  db 04
registerSymbol(CheckIfCanMerge)
registerSymbol(CheckIfCanMerge2)
registerSymbol(CheckIfCanMerge3)

[DISABLE]
CheckIfCanMerge+05:
  db 02
CheckIfCanMerge2+05:
  db 02
CheckIfCanMerge3+05:
  db 02
unregisterSymbol(CheckIfCanMerge)
unregisterSymbol(CheckIfCanMerge2)
unregisterSymbol(CheckIfCanMerge3)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>22</ID>
              <Description>"Idle Nympts Stay Off Map"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
if LaunchMonoDataCollector() ~= 0 then
    mono_compile_method(mono_findMethod('Assembly-CSharp', '&lt;&gt;c__DisplayClass55_3', '&lt;RandomAction&gt;b__4'))
    mono_compile_method(mono_findMethod('Assembly-CSharp', '&lt;&gt;c__DisplayClass55_7', '&lt;RandomAction&gt;b__8'))
end
{$asm}
aobScanRegion(IdleNymphsGoHome,&lt;&gt;c__DisplayClass55_3.&lt;RandomAction&gt;b__4,&lt;&gt;c__DisplayClass55_3.&lt;RandomAction&gt;b__4+128,F3 0F 7E 00 83 EC 14)
aobScanRegion(IdleNymphsGoHome2,&lt;&gt;c__DisplayClass55_7.&lt;RandomAction&gt;b__8,&lt;&gt;c__DisplayClass55_7.&lt;RandomAction&gt;b__8+128,F3 0F 7E 00 83 EC 14)
alloc(IdleNymphsGoHome_Mem,$1000)
alloc(IdleNymphsGoHome_Dat,$1000)
label(return)

IdleNymphsGoHome_Dat:
db 01 01

IdleNymphsGoHome_Mem:
  movq xmm0,[IdleNymphsGoHome_Dat]
  sub esp,14
  jmp return

IdleNymphsGoHome:
  jmp IdleNymphsGoHome_Mem
  nop 2
IdleNymphsGoHome2:
  jmp IdleNymphsGoHome_Mem
  nop 2
return:
registersymbol(IdleNymphsGoHome)
registersymbol(IdleNymphsGoHome2)

[DISABLE]
IdleNymphsGoHome:
  db F3 0F 7E 00 83 EC 14
IdleNymphsGoHome2:
  db F3 0F 7E 00 83 EC 14

unregistersymbol(IdleNymphsGoHome)
unregistersymbol(IdleNymphsGoHome2)
dealloc(IdleNymphsGoHome_Mem)
dealloc(IdleNymphsGoHome_Dat)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Cheats"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>25</ID>
              <Description>"Alchemist"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF00FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>8</ID>
                  <Description>"100% Bonus Item Chance"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
if LaunchMonoDataCollector() ~= 0 then
    local mId = mono_findMethod('Assembly-CSharp', 'Alchemist', '&lt;OpenUI&gt;b__31_1')
    addr = mono_compile_method(mId)
    addr = addr+712
    bytes = readBytes(addr,6,1)
    writeBytes(addr, 144,144,144,144,144,144)
end
{$asm}

[DISABLE]
{$lua}
if syntaxcheck then return end
writeBytes(addr,bytes)
{$asm}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>6</ID>
                  <Description>"Set items given to 9 (Enable, then leave &amp; re-enter camp)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
if LaunchMonoDataCollector() ~= 0 then
    mono_compile_method(mono_findMethod('Assembly-CSharp', 'Alchemist', 'Load'))
    return monoAA_FINDMONOMETHOD("AlchemistItemsGiven,:Alchemist:Load")
end
{$asm}
alloc(mem_AlchemistItemsGiven,$1000)
label(ret_AlchemistItemsGiven)
mem_AlchemistItemsGiven:
  db B9 09 00 00 00 83 C4 08
  jmp ret_AlchemistItemsGiven
AlchemistItemsGiven+1E6:
  jmp mem_AlchemistItemsGiven
ret_AlchemistItemsGiven:
registersymbol(AlchemistItemsGiven)

[DISABLE]
AlchemistItemsGiven+1E6:
  db 8B C8 83 C4 08
unregistersymbol(AlchemistItemsGiven)
dealloc(mem_AlchemistItemsGiven)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>7</ID>
                  <Description>"Trigger Alchemist Reset"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
aobscanmodule(AlchemistReset,GameAssembly.dll,85 E4 FF 83 C4 04 F2 0F 10 05 60 CA D5 7A)
alloc(AlchemistReset_Mem,$1000)
label(return)
AlchemistReset_Mem:
  movsd xmm0,[AlchemistReset_Num]
  jmp return
AlchemistReset_Num:
dq 0
AlchemistReset+06:
  jmp AlchemistReset_Mem
  nop 3
return:
registersymbol(AlchemistReset)
[DISABLE]
AlchemistReset+06:
  db F2 0F 10 05 60 CA D5 7A
unregistersymbol(AlchemistReset)
dealloc(AlchemistReset_Mem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>32</ID>
                  <Description>"Trigger Shop Daily Deal Reset"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
if LaunchMonoDataCollector() ~= 0 then
  mono_compile_method(mono_findMethod('Assembly-CSharp', 'ShopDailyManager', 'Get_masterSceneUpdate'))
end
{$asm}
aobScanRegion(AlchemistShopReset,ShopDailyManager.Get_masterSceneUpdate,ShopDailyManager.Get_masterSceneUpdate+256,0F 84 ?? ?? ?? ?? 6A 00 E8)
alloc(AlchemistShopReset_Bytes,6)
AlchemistShopReset_Bytes:
  readmem(AlchemistShopReset,6)
AlchemistShopReset:
  db 90 90 90 90 90 90
registerSymbol(AlchemistShopReset)
registerSymbol(AlchemistShopReset_Bytes)
[DISABLE]
AlchemistShopReset:
  readmem(AlchemistShopReset_Bytes,6)
unregisterSymbol(AlchemistShopReset)
unregisterSymbol(AlchemistShopReset_Bytes)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>26</ID>
              <Description>"Spawning Stuff"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF00FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>18</ID>
                  <Description>"Spawn Unlimited Floaty Things (Can get laggy AF, do not keep on for more than a couple seconds, then turn it off and wait!)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
if LaunchMonoDataCollector() ~= 0 then
    mono_compile_method(mono_findMethod('Assembly-CSharp', 'PassiveSpawner', 'CustomUpdate'))
end
{$asm}
aobScanRegion(PassiveSpawnerConstaSpawn,PassiveSpawner.CustomUpdate,PassiveSpawner.CustomUpdate+512,F2 0F 11 4E 10 72 1B)
PassiveSpawnerConstaSpawn+05:
  db 90 90
registerSymbol(PassiveSpawnerConstaSpawn)
[DISABLE]
PassiveSpawnerConstaSpawn+05:
  db 72 1B
unregisterSymbol(PassiveSpawnerConstaSpawn)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>19</ID>
                  <Description>"Building "Click" Spawners Constantly Spawn (Trees, Treasuries, etc)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
if LaunchMonoDataCollector() ~= 0 then
    mono_compile_method(mono_findMethod('Assembly-CSharp', 'ActiveSpawner', 'CustomUpdate'))
end
{$asm}
aobScanRegion(ActiveSpawnerConstaSpawn,ActiveSpawner.CustomUpdate,ActiveSpawner.CustomUpdate+512,83 C4 14 84 C0 0F 84 ?? ?? ?? ?? A1 ?? ?? ?? ?? 8B 7E 28)
alloc(ActiveSpawnerConstaSpawn_Bytes,6)
ActiveSpawnerConstaSpawn_Bytes:
  readmem(ActiveSpawnerConstaSpawn+05,6)
ActiveSpawnerConstaSpawn+05:
  db 90 90 90 90 90 90
registerSymbol(ActiveSpawnerConstaSpawn)
registerSymbol(ActiveSpawnerConstaSpawn_Bytes)

[DISABLE]
ActiveSpawnerConstaSpawn+05:
  readmem(ActiveSpawnerConstaSpawn_Bytes,6)
unregisterSymbol(ActiveSpawnerConstaSpawn)
unregisterSymbol(ActiveSpawnerConstaSpawn_Bytes)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>21</ID>
                  <Description>"Building "Drop" Spawners Constantly Spawn (Water, Oil, Panties) (Takes a while to kick in after activating, building must drop once on it's own)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
aobscanmodule(DropSpawner,GameAssembly.dll,6A 00 FF 76 1C FF 76 18 E8) // should be unique
alloc(DropSpawner_Mem,$1000)
label(code)
label(return)
DropSpawner_Mem:
  push 00
  push [esi+0C]
  call MapObject.get_IsFlying
  add esp,08
  test al,al
  jne code
  push 00
  push 01
  push 01
  jmp return
code:
  push 00
  push [esi+1C]
  push [esi+18]
  jmp return
DropSpawner:
  jmp DropSpawner_Mem
  db 90 90 90
return:
registersymbol(DropSpawner)
[DISABLE]
INJECT:
  db 6A 00 FF 76 1C FF 76 18
unregistersymbol(DropSpawner)
dealloc(DropSpawner_Mem)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>27</ID>
              <Description>"Resource Stuff"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF00FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>2</ID>
                  <Description>"Disable Cheat Detection"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
if LaunchMonoDataCollector() ~= 0 then
    mono_compile_method(mono_findMethod('Assembly-CSharp', 'CheatingPlayerReporter', 'ReportPlayer'))
    return monoAA_FINDMONOMETHOD("ReportPlayer,:CheatingPlayerReporter:ReportPlayer")
end
{$asm}
ReportPlayer:
  db C3
registersymbol(ReportPlayer)
[DISABLE]
ReportPlayer:
  db 55
unregistersymbol(ReportPlayer)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>17</ID>
                  <Description>"Shop Prices To Zero"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
if LaunchMonoDataCollector() ~= 0 then
    mono_compile_method(mono_findMethod('Assembly-CSharp', 'ShopItem', 'CalcPrice'))
end
{$asm}
aobScanRegion(ShopPricesZero,ShopItem.CalcPrice,ShopItem.CalcPrice+1536,0F AF C8 8B 45 EC 03 C1)
ShopPricesZero:
  db B8 00 00 00 00 90 90 90
registerSymbol(ShopPricesZero)
[DISABLE]
ShopPricesZero:
  db 0F AF C8 8B 45 EC 03 C1
unregisterSymbol(ShopPricesZero)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>15</ID>
                  <Description>"Instantly Unlock All Chests in "The Vault""</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
aobscanmodule(VaultChests,GameAssembly.dll,8B 75 08 80 7E 21 00 0F 85)
VaultChests+06:
  db 01
registersymbol(VaultChests)
[DISABLE]
VaultChests+06:
  db 00
unregistersymbol(VaultChests)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>28</ID>
              <Description>"Challenge Levels"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF00FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>10</ID>
                  <Description>"Double Bonus Rewards Cost 0 Gems"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
if LaunchMonoDataCollector() ~= 0 then
    mono_compile_method(mono_findMethod('Assembly-CSharp', 'ChallengeRewardWindow', 'SetChallengeRewards'))
    return monoAA_FINDMONOMETHOD("SetChallengeRewards,:ChallengeRewardWindow:SetChallengeRewards")
end
{$asm}
alloc(SetChallengeRewards_Mem,$1000)
label(SetChallengeRewards_Ret)
SetChallengeRewards_Mem:
  db 8B F8 83 C4 08
  mov [edi+54],0
  mov [edi+50],0
  mov [edi+4C],0
  jmp SetChallengeRewards_Ret
SetChallengeRewards+32:
  jmp SetChallengeRewards_Mem
SetChallengeRewards_Ret:
registersymbol(SetChallengeRewards)
[DISABLE]
SetChallengeRewards+32:
  db 8B F8 83 C4 08
unregistersymbol(SetChallengeRewards)
dealloc(SetChallengeRewards_Mem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>14</ID>
                  <Description>"Disable Timer"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
aobscanmodule(ChallengeTimer,GameAssembly.dll,0F 4D F0 5F 8B C6)
ChallengeTimer:
  db 89 C6 90
registersymbol(ChallengeTimer)
[DISABLE]
ChallengeTimer:
  db 0F 4D F0
unregistersymbol(ChallengeTimer)

</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>29</ID>
              <Description>"Misc"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF00FF</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4</ID>
                  <Description>"Buffs Activate At Max Level"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
aobscanmodule(BuffsToMax,GameAssembly.dll,FF 75 EC FF 75 E8 56 E8 96)
BuffsToMax:
  db 6A 08 90
registersymbol(BuffsToMax)
[DISABLE]
BuffsToMax:
  db FF 75 EC
unregistersymbol(BuffsToMax)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>30</ID>
                  <Description>"Buffs Don't Get Removed When Used"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
if LaunchMonoDataCollector() ~= 0 then
    mono_compile_method(mono_findMethod('Assembly-CSharp', 'BuffStarter', 'Open'))
end
{$asm}
aobScanRegion(BuffsDontDelete,BuffStarter.Open,BuffStarter.Open+1536,74 ?? 6A 00 6A 01 6A 00 50 E8)
alloc(BuffsDontDelete_Bytes,12)
BuffsDontDelete_Bytes:
  readmem(BuffsDontDelete+02,12)
BuffsDontDelete+02:
  db 90 90 90 90 90 90 90 90 90 90 90 90
registerSymbol(BuffsDontDelete)
registerSymbol(BuffsDontDelete_Bytes)
[DISABLE]
BuffsDontDelete+02:
  readmem(BuffsDontDelete_Bytes,12)
unregisterSymbol(BuffsDontDelete)
unregisterSymbol(BuffsDontDelete_Bytes)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>31</ID>
                  <Description>"No Cost To Open Locked Chests/Golems/Event Chest"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
if LaunchMonoDataCollector() ~= 0 then
    mono_compile_method(mono_findMethod('Assembly-CSharp', 'ChestOpenByCurrency', 'Tap'))
    mono_compile_method(mono_findMethod('Assembly-CSharp', 'ChestOpenByCurrency', '&lt;Tap&gt;b__2_0'))
end
{$asm}
aobScanRegion(ChestOpenByCurrency,ChestOpenByCurrency.Tap,ChestOpenByCurrency.Tap+256,FF 75 08 FF 75 FC FF 77 10 51 50)
aobScanRegion(ChestOpenByCurrency2,ChestOpenByCurrency.&lt;Tap&gt;b__2_0,ChestOpenByCurrency.&lt;Tap&gt;b__2_0+2048,8B 48 68 A1)
alloc(ChestOpenByCurrency2_Mem,$1000)
label(ChestOpenByCurrency2_Ret)

ChestOpenByCurrency:
  db 6A 00 90

ChestOpenByCurrency2_Mem:
  db B9 00 00 00 00
  readmem(ChestOpenByCurrency2+3,5)
  jmp ChestOpenByCurrency2_Ret

ChestOpenByCurrency2:
  jmp ChestOpenByCurrency2_Mem
  db 90 90 90
ChestOpenByCurrency2_Ret:
registerSymbol(ChestOpenByCurrency)
registerSymbol(ChestOpenByCurrency2)
registerSymbol(ChestOpenByCurrency2_Mem)
[DISABLE]
ChestOpenByCurrency:
  db FF 75 08

ChestOpenByCurrency2:
  db 8B 48 68
  readmem(ChestOpenByCurrency2_Mem+5,5)

unregisterSymbol(ChestOpenByCurrency)
unregisterSymbol(ChestOpenByCurrency2)
unregisterSymbol(ChestOpenByCurrency2_Mem)
dealloc(ChestOpenByCurrency2_Mem)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
